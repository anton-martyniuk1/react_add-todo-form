{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","TodoList","todos","map","id","completed","username","getUser","userId","usersFromServer","find","todosWithUser","App","useState","option","setOption","titleInputValue","setTitleInputValue","userIsSelected","setUserIsSelected","titleOnPaper","setTitleOnPaper","allTodos","setAllTodos","action","method","onSubmit","event","preventDefault","trim","length","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.351bc1cf.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto: ${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, user } = todo;\n\n  return (\n    <>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        const { id, completed } = todo;\n\n        return (\n          <article\n            data-id={id}\n            className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n            key={id}\n          >\n            <TodoInfo todo={todo} />\n          </article>\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number) {\n  const foundedUser = usersFromServer.find(user => user.id === userId);\n\n  return foundedUser || null;\n}\n\nconst todosWithUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [option, setOption] = useState('0');\n  const [titleInputValue, setTitleInputValue] = useState('');\n  const [userIsSelected, setUserIsSelected] = useState(true);\n  const [titleOnPaper, setTitleOnPaper] = useState(true);\n  const [allTodos, setAllTodos] = useState(todosWithUser);\n\n  const addTodo = () => {\n    const maxId = Math.max(...allTodos.map(todo => todo.id));\n\n    return ({\n      id: maxId + 1,\n      title: titleInputValue,\n      completed: false,\n      userId: +option,\n      user: getUser(+option),\n    });\n  };\n\n  const changesOnSubmit = () => {\n    if (option === '0') {\n      setUserIsSelected(false);\n    }\n\n    if (!titleInputValue.trim().length) {\n      setTitleOnPaper(false);\n    }\n\n    if (titleInputValue.trim().length && option !== '0') {\n      setAllTodos([\n        ...allTodos,\n        addTodo(),\n      ]);\n\n      setOption('0');\n      setTitleInputValue('');\n    }\n  };\n\n  const handleChangeTitleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitleInputValue(value);\n    setTitleOnPaper(true);\n  };\n\n  const handleChangeUserSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setOption(value);\n    setUserIsSelected(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          changesOnSubmit();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            {'Title: '}\n          </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleInputValue}\n            onChange={handleChangeTitleInput}\n          />\n\n          {!titleOnPaper && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            {'User: '}\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={option}\n            onChange={handleChangeUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!userIsSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={allTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}